generator client {
  provider = "prisma-client-js"
  previewFeatures = ["clientExtensions"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model complaint {
  id                               String   @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  description                      String   @db.VarChar(255)
  status                           String   @db.VarChar(255)
  customer_id                      String?  @db.Uuid
  assigned_to                      String?  @db.Uuid
  created_at                       DateTime @default(now()) @db.Timestamp(6)
  updated_at                       DateTime @default(now()) @db.Timestamp(6)
  user_complaint_assigned_toTouser user?    @relation("complaint_assigned_toTouser", fields: [assigned_to], references: [id], onDelete: NoAction, onUpdate: NoAction)
  user_complaint_customer_idTouser user?    @relation("complaint_customer_idTouser", fields: [customer_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model organization {
  id          String   @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  description String?  @db.VarChar(255)
  image       String?  @db.VarChar(255)
  name        String   @db.VarChar(255)
  created_at  DateTime @default(now()) @db.Timestamp(6)
  updated_at  DateTime @default(now()) @db.Timestamp(6)
  user_id     String   @db.Uuid
  tenant_id   String   @db.VarChar(255)
  user        user     @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model user {
  id                                    String         @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  email                                 String         @unique @db.VarChar(255)
  firstName                             String?        @db.VarChar(255)
  lastName                              String?        @db.VarChar(255)
  roq_user_id                           String         @db.VarChar(255)
  tenant_id                             String         @db.VarChar(255)
  created_at                            DateTime       @default(now()) @db.Timestamp(6)
  updated_at                            DateTime       @default(now()) @db.Timestamp(6)
  complaint_complaint_assigned_toTouser complaint[]    @relation("complaint_assigned_toTouser")
  complaint_complaint_customer_idTouser complaint[]    @relation("complaint_customer_idTouser")
  organization                          organization[]
}
